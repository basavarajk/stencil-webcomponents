/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@ionic/core';
import 'ionicons';
import '@openchemistry/volume-controls';
import {
  IMolecularOrbitals,
} from '@openchemistry/types';


export namespace Components {

  interface OcMoleculeMenuPopup {}
  interface OcMoleculeMenuPopupAttributes extends StencilHTMLAttributes {}

  interface OcMoleculeMenu {
    'activeMapName': string;
    'animationScale': number;
    'animationSpeed': number;
    'colorMapNames': string[];
    'colors': [number, number, number][];
    'colorsX': number[];
    'displayStyle': string;
    'hasVolume': boolean;
    'histograms': number[];
    'iMode': number;
    'iOrbital': number | string;
    'isoValue': number;
    'moleculeRenderer': string;
    'nElectrons': number;
    'nModes': number;
    'nOrbitals': number;
    'opacities': number[];
    'opacitiesX': number[];
    'orbitalSelect': boolean;
    'orbitals': IMolecularOrbitals;
    'play': boolean;
    'range': [number, number];
    'scfType': string;
    'showIsoSurface': boolean;
    'showVolume': boolean;
    'sphereScale': number;
    'stickRadius': number;
  }
  interface OcMoleculeMenuAttributes extends StencilHTMLAttributes {
    'activeMapName'?: string;
    'animationScale'?: number;
    'animationSpeed'?: number;
    'colorMapNames'?: string[];
    'colors'?: [number, number, number][];
    'colorsX'?: number[];
    'displayStyle'?: string;
    'hasVolume'?: boolean;
    'histograms'?: number[];
    'iMode'?: number;
    'iOrbital'?: number | string;
    'isoValue'?: number;
    'moleculeRenderer'?: string;
    'nElectrons'?: number;
    'nModes'?: number;
    'nOrbitals'?: number;
    'onActiveMapNameChanged'?: (event: CustomEvent) => void;
    'onAnimationScaleChanged'?: (event: CustomEvent) => void;
    'onAnimationSpeedChanged'?: (event: CustomEvent) => void;
    'onIModeChanged'?: (event: CustomEvent) => void;
    'onIOrbitalChanged'?: (event: CustomEvent) => void;
    'onIsoValueChanged'?: (event: CustomEvent) => void;
    'onMapRangeChanged'?: (event: CustomEvent) => void;
    'onMoleculeRendererChanged'?: (event: CustomEvent) => void;
    'onOpacitiesChanged'?: (event: CustomEvent) => void;
    'onOpacitiesXChanged'?: (event: CustomEvent) => void;
    'onPlayChanged'?: (event: CustomEvent) => void;
    'onShowIsoSurfaceChanged'?: (event: CustomEvent) => void;
    'onShowVolumeChanged'?: (event: CustomEvent) => void;
    'onSphereScaleChanged'?: (event: CustomEvent) => void;
    'onStickRadiusChanged'?: (event: CustomEvent) => void;
    'opacities'?: number[];
    'opacitiesX'?: number[];
    'orbitalSelect'?: boolean;
    'orbitals'?: IMolecularOrbitals;
    'play'?: boolean;
    'range'?: [number, number];
    'scfType'?: string;
    'showIsoSurface'?: boolean;
    'showVolume'?: boolean;
    'sphereScale'?: number;
    'stickRadius'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'OcMoleculeMenuPopup': Components.OcMoleculeMenuPopup;
    'OcMoleculeMenu': Components.OcMoleculeMenu;
  }

  interface StencilIntrinsicElements {
    'oc-molecule-menu-popup': Components.OcMoleculeMenuPopupAttributes;
    'oc-molecule-menu': Components.OcMoleculeMenuAttributes;
  }


  interface HTMLOcMoleculeMenuPopupElement extends Components.OcMoleculeMenuPopup, HTMLStencilElement {}
  var HTMLOcMoleculeMenuPopupElement: {
    prototype: HTMLOcMoleculeMenuPopupElement;
    new (): HTMLOcMoleculeMenuPopupElement;
  };

  interface HTMLOcMoleculeMenuElement extends Components.OcMoleculeMenu, HTMLStencilElement {}
  var HTMLOcMoleculeMenuElement: {
    prototype: HTMLOcMoleculeMenuElement;
    new (): HTMLOcMoleculeMenuElement;
  };

  interface HTMLElementTagNameMap {
    'oc-molecule-menu-popup': HTMLOcMoleculeMenuPopupElement
    'oc-molecule-menu': HTMLOcMoleculeMenuElement
  }

  interface ElementTagNameMap {
    'oc-molecule-menu-popup': HTMLOcMoleculeMenuPopupElement;
    'oc-molecule-menu': HTMLOcMoleculeMenuElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
