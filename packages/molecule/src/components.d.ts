/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@openchemistry/molecule-menu';
import '@ionic/core';
import 'ionicons';
import '@openchemistry/volume-controls';
import '@openchemistry/molecule-vtkjs';
import '@openchemistry/molecule-moljs';
import '@openchemistry/vibrational-spectrum';
import 'split-me';
import {
  IChemJson,
} from '@openchemistry/types';


export namespace Components {

  interface OcMolecule {
    'activeMapName': string;
    'animationScale': number;
    'animationSpeed': number;
    'cjson': IChemJson;
    'colorsX': number[];
    'histograms': number[];
    'iMode': number;
    'iOrbital': number | string;
    'isoValue': number;
    'moleculeRenderer': string;
    'opacities': number[];
    'opacitiesX': number[];
    'orbitalSelect': boolean;
    'play': boolean;
    'range': [number, number];
    'rotate': boolean;
    'showIsoSurface': boolean;
    'showMenu': boolean;
    'showSpectrum': boolean;
    'showVolume': boolean;
    'sphereScale': number;
    'stickRadius': number;
  }
  interface OcMoleculeAttributes extends StencilHTMLAttributes {
    'activeMapName'?: string;
    'animationScale'?: number;
    'animationSpeed'?: number;
    'cjson'?: IChemJson;
    'colorsX'?: number[];
    'histograms'?: number[];
    'iMode'?: number;
    'iOrbital'?: number | string;
    'isoValue'?: number;
    'moleculeRenderer'?: string;
    'onIOrbitalChanged'?: (event: CustomEvent) => void;
    'opacities'?: number[];
    'opacitiesX'?: number[];
    'orbitalSelect'?: boolean;
    'play'?: boolean;
    'range'?: [number, number];
    'rotate'?: boolean;
    'showIsoSurface'?: boolean;
    'showMenu'?: boolean;
    'showSpectrum'?: boolean;
    'showVolume'?: boolean;
    'sphereScale'?: number;
    'stickRadius'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'OcMolecule': Components.OcMolecule;
  }

  interface StencilIntrinsicElements {
    'oc-molecule': Components.OcMoleculeAttributes;
  }


  interface HTMLOcMoleculeElement extends Components.OcMolecule, HTMLStencilElement {}
  var HTMLOcMoleculeElement: {
    prototype: HTMLOcMoleculeElement;
    new (): HTMLOcMoleculeElement;
  };

  interface HTMLElementTagNameMap {
    'oc-molecule': HTMLOcMoleculeElement
  }

  interface ElementTagNameMap {
    'oc-molecule': HTMLOcMoleculeElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
